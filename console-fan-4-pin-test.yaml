substitutions:
  friendly_name: Console Fan 4 pin

esphome:
  name: console-fan-4-pin

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

logger:
api:
ota:
captive_portal:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "console-fan-ap"
    password: "O2YQivORnPXe"

    # Example configuration entry
text_sensor:
  - platform: wifi_info
    ip_address:
      name: $friendly_name IP Address

  - platform: template
    name: $friendly_name Uptime
    id: uptime_human
    icon: mdi:clock-start

# Send WiFi signal strength & uptime to HA
sensor:

  - platform: wifi_signal
    name: $friendly_name WiFi Strength
    update_interval: 60s

  - platform: uptime
    name: $friendly_name Uptime
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

########################################################
# START

output:
  - platform: ledc
    pin: 15
    frequency: "25000 Hz"
    # min_power: 15%
    # power_supply: fan_power_supply
    id: console_fan_speed

fan:
  - platform: speed
    output: console_fan_speed
    name: "Console Fan Speed"
